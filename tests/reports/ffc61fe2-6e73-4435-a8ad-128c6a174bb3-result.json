{"name": "test_successful_first_edit_main_safe", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000100542a80 chromedriver + 4385408\n1   chromedriver                        0x000000010053b38c chromedriver + 4354956\n2   chromedriver                        0x0000000100158b0c chromedriver + 281356\n3   chromedriver                        0x000000010019b2f8 chromedriver + 553720\n4   chromedriver                        0x00000001001d3d24 chromedriver + 785700\n5   chromedriver                        0x000000010018feec chromedriver + 507628\n6   chromedriver                        0x00000001001908c4 chromedriver + 510148\n7   chromedriver                        0x000000010050a43c chromedriver + 4154428\n8   chromedriver                        0x000000010050eea0 chromedriver + 4173472\n9   chromedriver                        0x00000001004efff8 chromedriver + 4046840\n10  chromedriver                        0x000000010050f78c chromedriver + 4175756\n11  chromedriver                        0x00000001004e2fb8 chromedriver + 3993528\n12  chromedriver                        0x000000010052d21c chromedriver + 4297244\n13  chromedriver                        0x000000010052d398 chromedriver + 4297624\n14  chromedriver                        0x000000010053af84 chromedriver + 4353924\n15  libsystem_pthread.dylib             0x00000001861f2f94 _pthread_start + 136\n16  libsystem_pthread.dylib             0x00000001861edd34 thread_start + 8", "trace": "self = <test_1_login.TestProfile object at 0x105da2a50>\n\n    def test_successful_first_edit_main_safe(self):\n>       self.navigate_main_safe_edit()\n\ntest_1_login.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_1_login.py:92: in navigate_main_safe_edit\n    self.navigate_safes_pages()\ntest_1_login.py:88: in navigate_safes_pages\n    self.page.find_side_menu_safes()\n../pages/page_1_login.py:98: in find_side_menu_safes\n    self.side_menu_safes = Driver.wait(self.driver, By.XPATH, '//*[@id=\"m_5bfcffaca8212551671f906a\"]/a/span[2]', \"click\", 5)\n../utilities/Driver.py:16: in wait\n    return WebDriverWait(driver, timeout).until(ec.element_to_be_clickable((selector, element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fb2abfcf94c0accb9184b8a692d7a609\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x105dd74c0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000100542a80 chromedriver + 4385408\nE       1   chromedriver                        0x000000010053b38c chromedriver + 4354956\nE       2   chromedriver                        0x0000000100158b0c chromedriver + 281356\nE       3   chromedriver                        0x000000010019b2f8 chromedriver + 553720\nE       4   chromedriver                        0x00000001001d3d24 chromedriver + 785700\nE       5   chromedriver                        0x000000010018feec chromedriver + 507628\nE       6   chromedriver                        0x00000001001908c4 chromedriver + 510148\nE       7   chromedriver                        0x000000010050a43c chromedriver + 4154428\nE       8   chromedriver                        0x000000010050eea0 chromedriver + 4173472\nE       9   chromedriver                        0x00000001004efff8 chromedriver + 4046840\nE       10  chromedriver                        0x000000010050f78c chromedriver + 4175756\nE       11  chromedriver                        0x00000001004e2fb8 chromedriver + 3993528\nE       12  chromedriver                        0x000000010052d21c chromedriver + 4297244\nE       13  chromedriver                        0x000000010052d398 chromedriver + 4297624\nE       14  chromedriver                        0x000000010053af84 chromedriver + 4353924\nE       15  libsystem_pthread.dylib             0x00000001861f2f94 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x00000001861edd34 thread_start + 8\n\n../.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "attachments": [{"name": "stdout", "source": "83cf8b4b-d64b-4d6f-807f-c3d2efd949dc-attachment.txt", "type": "text/plain"}], "start": 1720209302951, "stop": 1720209336679, "uuid": "5cd89cba-5f9c-406a-98d2-66354d889478", "historyId": "be46f95421fae00b613d1f02c46acecf", "testCaseId": "be46f95421fae00b613d1f02c46acecf", "fullName": "tests.test_1_login.TestProfile#test_successful_first_edit_main_safe", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_1_login"}, {"name": "subSuite", "value": "TestProfile"}, {"name": "host", "value": "Ismets-Air.home"}, {"name": "thread", "value": "16213-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_1_login"}]}